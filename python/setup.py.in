CYTHON_ENABLED = @CYTHON_ENABLED_BOOL@
from distutils.core import setup
from distutils.extension import Extension
if CYTHON_ENABLED:
    from Cython.Distutils import build_ext

# the c++ extension module (needs to be linked in with ktable.o ...)
extension_mod_DICT = \
    {
	"sources": [ "_khmermodule.pyx" if CYTHON_ENABLED else "_khmermodule.cc" ],
	"extra_compile_args": filter( None, [
	    '@DEFINE_KHMER_THREADED@',
	    '@DEFINE_KHMER_EXTRA_SANITY_CHECKS@',
	    '@CXX_DEBUG_FLAGS@',
	    '@CXX_THREADING_FLAGS@',
	] ),
	"extra_link_args": filter( None, [ '@THREADING_LIBS@', ] ),
	"include_dirs": [ '../lib', ],
	"library_dirs": [ '../lib', ],
	"extra_objects": \
	    [
		'../lib/khmer_config.o',
		'../lib/ktable.o',
		'../lib/hashtable.o',
		'../lib/parsers.o',
		'../lib/threadedParsers.o',
		'../lib/hashbits.o',
		'../lib/counting.o',
		'../lib/subset.o',
		'../lib/zlib-1.2.3/adler32.o',
		'../lib/zlib-1.2.3/compress.o',
		'../lib/zlib-1.2.3/crc32.o',
		'../lib/zlib-1.2.3/deflate.o',
		'../lib/zlib-1.2.3/gzio.o',
		'../lib/zlib-1.2.3/infback.o',
		'../lib/zlib-1.2.3/inffast.o',
		'../lib/zlib-1.2.3/inflate.o',
		'../lib/zlib-1.2.3/inftrees.o',
		'../lib/zlib-1.2.3/trees.o',
		'../lib/zlib-1.2.3/uncompr.o',
		'../lib/zlib-1.2.3/zutil.o',
	    ],
	"depends": \
	    [
		'../lib/storage.hh',
		'../lib/khmer.hh',
		'../lib/khmer_config.hh',
		'../lib/ktable.hh',
		'../lib/hashtable.hh',
		'../lib/counting.hh',
		'../lib/khmer_config.o',
		'../lib/hashtable.o',
		'../lib/ktable.o',
		'../lib/parsers.o',
		'../lib/threadedParsers.o',
		'../lib/hashbits.o',
		'../lib/counting.o',
		'../lib/subset.o',
		'../lib/zlib-1.2.3/adler32.o',
		'../lib/zlib-1.2.3/compress.o',
		'../lib/zlib-1.2.3/crc32.o',
		'../lib/zlib-1.2.3/deflate.o',
		'../lib/zlib-1.2.3/gzio.o',
		'../lib/zlib-1.2.3/infback.o',
		'../lib/zlib-1.2.3/inffast.o',
		'../lib/zlib-1.2.3/inflate.o',
		'../lib/zlib-1.2.3/inftrees.o',
		'../lib/zlib-1.2.3/trees.o',
		'../lib/zlib-1.2.3/uncompr.o',
		'../lib/zlib-1.2.3/zutil.o'
	    ]
    }
if CYTHON_ENABLED:
    extension_mod_DICT.update(
	{
	    "language": "c++",
	    "libraries": [ "stdc++" ],
	}
    )

extension_mod = \
    Extension(
	"khmer._khmer" if CYTHON_ENABLED else "khmer._khmermodule",
	**extension_mod_DICT
    )
# python modules: only 'khmer'
py_mod = 'khmer'
setup_metadata = \
    {
	"name": "khmer", "version": "0.2",
	"description": 'khmer k-mer counting library',
	"author": 'C. Titus Brown and Jason Pell',
	"author_email": 'ctb@msu.edu',
	"url": 'http://ged.msu.edu/',
	"license": 'New BSD License',
	"packages": [ py_mod, ],
	"ext_modules": [ extension_mod, ],
    }
if CYTHON_ENABLED:
    setup_metadata.update(
	{
	    "cmdclass": {'build_ext': build_ext},
	}
    )

setup( **setup_metadata )

# vim: set sts=4 sw=4:
