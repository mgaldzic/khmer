========================
Ready-made khmer scripts
========================

k-mer counting
==============

load-into-counting.py: build a counting hash.

   Usage::

	load-into-counting.py [ options ] <output.kh> <file1> <file2> ...

   Build a counting hash table using the sequences in <file1-N>, and save it
   to <output.kh>.

   Example::

	scripts/load-into-counting.py -k 20 -x 5e7 out.kh data/100k-filtered.fa

filter-abund.py: trim sequences at a min k-mer abundance.

   Usage::
	
	filter-abund.py [ -C <cutoff> ] <input.kh> <file1> <file2> ...

   Load a counting hash table from <input.kh> and use it to trim the
   sequences in <file1-N>.  Trimmed sequences will be placed in
   <fileN>.abundfilt.

   Example::

	scripts/load-into-counting.py -k 20 -x 5e7 table.kh data/100k-filtered.fa
	scripts/filter-abund.py -C 2 table.kh data/100k-filtered.fa

Partitioning
============

filter-stoptags.py: trim sequences at stoptags.

   Usage::

	filter-stoptags.py [ -k <ksize> ] <input.stoptags> <file1> <file2> ...

   Load stoptags in from the given .stoptags file and use them to trim
   or remove the sequences in <file1-N>.  Trimmed sequences will be placed in
   <fileN>.stopfilt.

   (Stoptags are produced by various (re)partitioning scripts.)

Digital normalization
=====================

normalize-by-min.py: do digital normalization (remove redundant sequences)

   Usage::

	normalize-by-median.py [ options ] <file1> <file2> ...

   Discard sequences based on whether or not their **minimum** k-mer
   abundance lies above a specified cutoff.  Kept sequences will be
   placed in <fileN>.keep.

   Note: this is, in theory, a loss-less operation.  Only sequences that
   contribute no novel k-mers will be discarded.

normalize-by-median.py: do digital normalization (remove redundant sequences)

   Usage::

	normalize-by-median.py [ options ] <file1> <file2> ...

   Discard sequences based on whether or not their **median** k-mer
   abundance lies above a specified cutoff.  Kept sequences will be
   placed in <fileN>.keep.
